<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<!-- 读取资源文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:conf/properties/dev/jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 数据源配置, 使用Tomcat JDBC连接池 -->
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClassName" value="${driverClassName}" />
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="${jdbc_username}" />
		<property name="password" value="${jdbc_password}" />

		<!-- Connection Pooling Info -->
		<property name="maxActive" value="${jdbc.pool.maxActive}" />
		<property name="minIdle" value="${jdbc.pool.minIdle}" />
		<property name="initialSize" value="${jdbc.pool.initialSize}"/>
		<!-- <property name="defaultAutoCommit" value="false" /> -->
		
		<property name="testWhileIdle" value="true"/>
		<property name="testOnBorrow" value="true"/>
		<property name="testOnReturn" value="false"/>
		<property name="validationQuery" value="SELECT 1"/>
		<property name="validationInterval" value="30000"/>
		<property name="removeAbandonedTimeout" value="60"/>
		<property name="removeAbandoned" value="true"/>
		<property name="logAbandoned" value="true"/>
		<property name="timeBetweenEvictionRunsMillis" value="30000"/>
		<property name="minEvictableIdleTimeMillis" value="30000"/>
	</bean>
	
	

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:com/sage/scrm/vanke/module/pay/mapper/xml/*Mapper.xml</value>
			</list>
		</property>
	</bean>
	
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	
	
	<!-- 自动扫描cn.info.platform.mapper包下的Mapper接口,并实现其功能  -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sage.scrm.module.*.mapper" />
		<property name="markerInterface" value="com.sage.scrm.core.mapper.BaseMapper" />
	</bean>
	
	<!-- 事务配置 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="find*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="modify*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	<!-- 自动代理配置 -->
	<aop:config>
		 <aop:pointcut expression="execution (* com.sage.scrm.module.sys.service.impl.*.*(..))" id="service"/>
		 <aop:advisor advice-ref="txAdvice" pointcut-ref="service"/>
	</aop:config>
	
	<bean id="schedulerFactory" class="org.springframework.scheduling.quartz.SchedulerFactoryBean"></bean>
	
	<!-- 标注类型 的事务配置 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	
	<!-- 图片生成类 Begin -->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<prop key="kaptcha.border">no</prop>
						<prop key="kaptcha.border.color">105,179,90</prop>
						<prop key="kaptcha.textproducer.font.color">black</prop>
						<prop key="kaptcha.image.width">200</prop>
						<prop key="kaptcha.image.height">50</prop>
						<prop key="kaptcha.textproducer.char.string">1234567890</prop>
						<prop key="kaptcha.textproducer.font.size">50</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>
	<!-- 图片生成类 End -->
	
</beans>